import {
  rtcSessionDescriptionOffer,
  rtcSessionDescriptionAnswer
} from "./call";
import { ServerMessage } from "./protocol/index";
import { objectId } from "./objectId";

export trait Update {}

export type updateCallOffer : Update {
  string username;
  objectId callId;
  rtcSessionDescriptionOffer offer;
  // whether remove video is enabled or not
  bool videoEnabled;
}

export type updateCallRTCIceCandidate : Update {
  objectId callId;
  string candidate;
}

export type updateCallAnswer : Update {
  objectId callId;
  rtcSessionDescriptionAnswer answer;
  // whether other peer video is enabled or not
  bool videoEnabled;
}

export type updateCallDrop : Update {
  objectId callId;
}

export type updateCallStarted : Update {
  objectId callId;
}

export type updateCallVideoEnabledStateChange : Update {
  objectId callId;
  bool videoEnabled;
}

export type Updates : ServerMessage {
  vector<Update> updates;
}
