import { Void } from "./protocol/void";
import { Request } from "./protocol/Request";
import { Result } from "./protocol/Result";
import { objectId } from "./objectId";

export trait RTCSessionDescription {}

export type rtcSessionDescriptionOffer : RTCSessionDescription {
  optional<string> sdp;
}

export type rtcSessionDescriptionAnswer : RTCSessionDescription {
  optional<string> sdp;
}

export type rtcSessionDescriptionPreAnswer : RTCSessionDescription {
  optional<string> sdp;
}

export type sendOfferResult : Result {
  objectId callId;
}

export call SendOffer : Request => sendOfferResult {
  string username;
  rtcSessionDescriptionOffer offer;
}

export call SendRTCIceCandidate : Request => Void {
  objectId callId;
  // output of .toJSON() method
  string candidate;
}

export trait SendAnswerInput {}

export type sendAnswerInputAccept : SendAnswerInput {
  rtcSessionDescriptionAnswer description;
}

// declines the call
export type sendAnswerInputDecline : SendAnswerInput{}

export call SendAnswer : Request => Void {
  objectId callId;
  SendAnswerInput value;
}
